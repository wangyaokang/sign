<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wyk.sign.persistence.ElectiveMapper">

	<resultMap type="com.wyk.sign.model.Elective" id="electiveMap">
		<id property="id" column="id" javaType="long" />
		<association property="admin" javaType="com.wyk.sign.model.Administrator">
			<id property="id" column="admin_id"/>
			<result property="wxId" column="admin_wx_id" />
			<result property="wxName" column="admin_wx_name" />
			<result property="wxAvatarUrl" column="admin_wx_avatar_url" />
			<result property="realName" column="admin_real_name" />
			<result property="userType" column="admin_user_type" />
			<result property="status" column="admin_status" />
		</association>
		<association property="classes" javaType="com.wyk.sign.model.Classes">
			<id property="id" column="class_id"/>
			<result property="name" column="class_name" />
			<result property="status" column="class_status" />
		</association>
		<association property="course" javaType="com.wyk.sign.model.Course">
			<id property="id" column="course_id"/>
			<result property="name" column="course_name" />
			<result property="status" column="course_status" />
		</association>
	</resultMap>

	<sql id="selectSQL">
		select e.*,
			ad.id as admin_id,
			ad.wx_name as admin_wx_name,
			ad.wx_avatar_url as admin_wx_avatar_url,
			ad.real_name as admin_real_name,
			ad.user_type as admin_user_type,
			cl.id as class_id,
			cl.name as class_name,
			cl.status as class_status,
			co.id as course_id,
			co.name as course_name,
			co.status as course_status
		 from tb_classes_course_admin e
		 		inner join tb_classes cl on e.class_id = cl.id
		 		inner join tb_course co on e.course_id = co.id
		 		inner join tb_admin ad on e.admin_id = ad.id
	</sql>

	<!-- Base Mapper -->
	<select id="get" parameterType="hashmap" resultMap="electiveMap">
		<include refid="selectSQL" />
		<where>
			<if test="id != null">
				e.id = #{id}
			</if>
			<if test="classId != null and courseId != null and adminId != null">
				and cl.id = #{classId} and co.id = #{courseId} and ad.id = #{adminId}
			</if>
		</where>
		limit 0,1
	</select>

	<select id="query" resultMap="electiveMap">
		<include refid="selectSQL" />
	</select>

	<select id="queryByMap" parameterType="hashmap" resultMap="electiveMap">
		<include refid="selectSQL" />
		<where>
			<if test="classId != null">
				cl.id = #{classId}
			</if>
			<if test="courseId != null">
				and co.id = #{courseId}
			</if>
			<if test="adminId != null">
				and ad.id = #{adminId}
			</if>
		</where>
	</select>

	<insert id="insert" parameterType="com.wyk.sign.model.Elective"
		useGeneratedKeys="true" keyProperty="id">
		insert into tb_classes_course_admin (
		admin_id,
		class_id,
		course_id)
		values
		(#{admin.id},
		#{classes.id},
		#{course.id}
		)
	</insert>

	<update id="update" parameterType="com.wyk.sign.model.Elective">
		update tb_classes_course_admin set
		admin_id=#{admin.id},
		class_id=#{classes.id},
		course_id=#{course.id},
		where id = #{id}
	</update>

	<delete id="delete" parameterType="com.wyk.sign.model.Elective">
		delete from tb_classes_course_admin
		<where>
			<if test="id != null">
				id = #{id}
			</if>
		</where>
	</delete>
	<!-- End of Base Mapper -->

	<delete id="deleteElectiveByMap" parameterType="hashmap">
		delete from tb_classes_course_admin
		<where>
			<if test="id != null">
				id = #{id}
			</if>
			<if test="classId != null">
				and class_id = #{classId}
			</if>
			<if test="courseId != null">
				and course_id = #{courseId}
			</if>
			<if test="adminId != null">
				and admin_id = #{adminId}
			</if>
		</where>
	</delete>
</mapper>