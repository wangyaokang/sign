<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wyk.sign.persistence.GradeMapper">

    <resultMap type="com.wyk.sign.model.Grade" id="gradeMap">
        <id property="id" column="id" javaType="long"/>
        <id property="courseScore" column="course_score" javaType="double"/>
        <id property="testScore" column="test_score" javaType="double"/>
        <id property="termStartDate" column="term_start_date"/>
        <id property="termStopDate" column="term_stop_date"/>
        <association property="student" javaType="com.wyk.sign.model.Student">
            <result property="wxId" column="stu_wx_id"/>
            <result property="wxName" column="stu_wx_name"/>
            <result property="wxAvatarUrl" column="stu_wx_avatar_url"/>
            <result property="realName" column="stu_real_name"/>
            <result property="userType" column="stu_user_type"/>
            <result property="sno" column="stu_sno"/>
        </association>
        <association property="elective" javaType="com.wyk.sign.model.Elective">
            <id property="id" column="elective_id"/>
            <id property="courseScoreRatio" column="course_score_ratio"/>
            <id property="testScoreRatio" column="test_score_ratio"/>
            <association property="admin" javaType="com.wyk.sign.model.Administrator">
                <id property="id" column="admin_id"/>
                <result property="wxId" column="admin_wx_id"/>
                <result property="wxName" column="admin_wx_name"/>
                <result property="wxAvatarUrl" column="admin_wx_avatar_url"/>
                <result property="realName" column="admin_real_name"/>
                <result property="userType" column="admin_user_type"/>
            </association>
            <association property="classes" javaType="com.wyk.sign.model.Classes">
                <id property="id" column="class_id"/>
                <result property="name" column="class_name"/>
                <result property="status" column="class_status"/>
            </association>
            <association property="course" javaType="com.wyk.sign.model.Course">
                <id property="id" column="course_id"/>
                <result property="name" column="course_name"/>
                <result property="status" column="course_status"/>
            </association>
        </association>
    </resultMap>

    <sql id="selectSQL">
		select grade.id, grade.test_score, grade.course_score,
		      grade.term_start_date,
		      grade.term_stop_date,
		      stu.id as stu_wx_id,
		      stu.wx_name as stu_wx_name,
		      stu.wx_avatar_url as stu_wx_avatar_url,
		      stu.real_name as stu_real_name,
		      stu.user_typ as stu_user_type,
		      ele.id as ele_id,
		      ele.course_score_ratio as ele_course_score_ratio,
		      ele.test_score_ratio as ele_test_score_ratio,
		      ad.id as ad_id,
		      ad.wx_name as ad_wx_name,
		      ad.wx_avatar_url as ad_wx_avatar_url,
		      ad.real_name as ad_real_name,
		      ad.user_typ as ad_user_type,
		      cl.id as cl_id,
		      cl.name as cl_name,
		      cl.status as cl_status,
		      co.id as co_id,
		      co.name as co_name,
		      co.status as co_status
		  from tb_grade grade
		        inner join tb_student stu on grade.stu_id = stu.id
		        inner join tb_classes_course_admin ele on grade.elective_id = ele.id
		        inner join tb_admin ad on ele.admin_id = ad.id
		        inner join tb_classes cl on ele.class_id = cl.id
		        inner join tb_course co on ele.course_id = co.id
	</sql>

    <!-- Base Mapper -->
    <select id="get" parameterType="hashmap" resultMap="gradeMap">
        <include refid="selectSQL"/>
        <where>
            <if test="id != null">
                id = #{id}
            </if>
        </where>
        limit 0,1
    </select>

    <select id="query" resultMap="gradeMap">
        <include refid="selectSQL"/>
    </select>

    <select id="queryByMap" parameterType="hashmap" resultMap="gradeMap">
        <include refid="selectSQL"/>
        <where>
            <if test="wxId != null">
                stu.wx_id = #{wxId}
            </if>
            <if test="wxName != null">
                and stu.wxName = #{wxName}
            </if>
            <if test="realName != null">
                and stu.real_name = #{realName}
            </if>
        </where>
    </select>

    <insert id="insert" parameterType="com.wyk.sign.model.Grade"
            useGeneratedKeys="true" keyProperty="id">
		insert into tb_grade (
		elective_id,
		stu_id,
		course_score,
		test_score,
		term_start_date,
		term_stop_date)
		values
		(#{elective.id},
		#{student.id},
		#{courseScore},
		#{testScore},
		#{termStartDate},
		#{termStopDate})
	</insert>

    <update id="update" parameterType="com.wyk.sign.model.Grade">
		update tb_grade set
		elective_id=#{elective.id},
		stu_id=#{student.id},
		course_score=#{courseScore},
		test_score=#{testScore},
		term_start_date=#{termStartDate},
		term_stop_date=#{termStopDate}
		where id = #{id}
	</update>

    <update id="updateBatch" parameterType="List">
        <foreach collection="list" separator=";" item="admin">
            update tb_grade set
            elective_id=#{elective.id},
            stu_id=#{student.id},
            course_score=#{courseScore},
            test_score=#{testScore},
            term_start_date=#{termStartDate},
            term_stop_date=#{termStopDate}
            where id = #{id}
        </foreach>
    </update>

    <delete id="delete" parameterType="com.wyk.sign.model.Grade">
        delete from tb_grade
        <where>
            <if test="id != null">
                id = #{id}
            </if>
        </where>
    </delete>

    <delete id="deleteByMap" parameterType="hashmap">
        delete from tb_grade
        <where>
            <if test="id != null">
                id = #{id}
            </if>
        </where>
    </delete>
    <!-- End of Base Mapper -->

</mapper>