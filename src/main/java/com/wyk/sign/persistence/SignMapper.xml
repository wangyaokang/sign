<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wyk.sign.persistence.SignMapper">

	<resultMap type="com.wyk.sign.model.Sign" id="signMap">
		<id property="id" column="id" javaType="long" />
		<result property="signDate" column="sign_date" />
		<result property="signAddress" column="sign_address" />
		<result property="status" column="status" />
		<association property="student" javaType="com.wyk.sign.model.Student">
			<id property="id" column="stu_id"/>
			<result property="wxId" column="stu_wx_id" />
			<result property="wxName" column="stu_wx_name" />
			<result property="wxAvatarUrl" column="stu_wx_avatar_url" />
			<result property="realName" column="stu_real_name" />
			<result property="userType" column="stu_user_type" />
			<result property="sno" column="stu_sno" />
			<result property="status" column="stu_status" />
		</association>
		<association property="info" javaType="com.wyk.sign.model.SignInfo">
			<id property="id" column="info_id"/>
			<result property="startDate" column="info_start_date" />
			<result property="stopDate" column="info_stop_date" />
			<result property="address" column="info_address" />
			<result property="status" column="info_status" />
		</association>
	</resultMap>

	<sql id="selectSQL">
		select s.*,
		    stu.id as stu_id,
		    stu.wx_id as stu_wx_id,
			stu.wx_name as stu_wx_name,
			stu.wx_avatar_url as stu_wx_avatar_url,
			stu.real_name as stu_real_name,
			stu.user_type as stu_user_type,
			stu.sno	as stu_sno,
			stu.status as stu_status,
			info.id as info_id,
			info.start_date as info_start_date,
			info.stop_date as info_stop_date,
			info.address as info_address,
			info.status as info_status
		  from tb_sign s
		  	inner join tb_sign_info info on s.info_id = info.id
		  	inner join tb_student stu on  s.stu_id = stu.id
	</sql>

	<!-- Base Mapper -->
	<select id="get" parameterType="hashmap" resultMap="signMap">
		<include refid="selectSQL" />
		<where>
			<if test="id != null">
				s.id = #{id}
			</if>
            <if test="wxId != null and infoId != null">
                and stu.wx_id = #{wxId} and info.id = #{infoId}
            </if>
			<if test="stuId != null and infoId != null">
				and stu.id = #{stuId} and info.id = #{infoId}
			</if>
		</where>
		limit 0,1
	</select>

	<select id="query" resultMap="signMap">
		<include refid="selectSQL" />
	</select>

	<select id="queryByMap" parameterType="hashmap" resultMap="signMap">
		<include refid="selectSQL" />
		<where>
			<if test="wxName != null">
				stu.wx_name = #{wxName}
			</if>
			<if test="sno != null">
				and stu.sno = #{sno}
			</if>
			<if test="infoId != null">
				and info.id = #{infoId}
			</if>
			<if test="status != null">
				and s.status = #{status}
			</if>
		</where>
	</select>

	<insert id="insert" parameterType="com.wyk.sign.model.Sign"
		useGeneratedKeys="true" keyProperty="id">
		insert into tb_sign (
		info_id,
		stu_id,
		sign_date,
		sign_address,
		status)
		values
		(#{info.id},
		#{student.id},
		#{signDate},
		#{signAddress},
		#{status})
	</insert>

	<update id="update" parameterType="com.wyk.sign.model.Sign">
		update tb_sign set
		info_id=#{info.id},
		stu_id=#{student.id},
		sign_date=#{signDate},
		sign_address=#{signAddress},
		status=#{status},
		modify_time=#{modifyTime}
		where id = #{id}
	</update>

	<update id="updateBatch" parameterType="List">
		<foreach collection="list" separator=";" item="sign">
            update tb_sign set
            info_id=#{info.id},
            stu_id=#{student.id},
            sign_date=#{signDate},
            sign_address=#{signAddress},
            status=#{status},
            modify_time=#{modifyTime}
            where id = #{id}
		</foreach>
	</update>

	<delete id="delete" parameterType="com.wyk.sign.model.Sign">
		delete from tb_sign
		<where>
			<if test="id != null">
				id = #{id}
			</if>
		</where>
	</delete>

	<delete id="deleteByMap" parameterType="hashmap">
		delete from tb_sign
		<where>
			<if test="infoId != null">
				info_id = #{infoId}
			</if>
		</where>
	</delete>
	<!-- End of Base Mapper -->

	<select id="querySignListOfClassByInfoId" parameterType="hashmap" resultMap="signMap">
		SELECT
			sign.*,
			stu.id AS stu_id,
			stu.wx_id AS stu_wx_id,
			stu.wx_name AS stu_wx_name,
			stu.wx_avatar_url AS stu_wx_avatar_url,
			stu.real_name AS stu_real_name,
			stu.user_type AS stu_user_type,
			stu.sno AS stu_sno,
			stu. STATUS AS stu_status,
			info.id AS info_id,
			info.start_date AS info_start_date,
			info.stop_date AS info_stop_date,
			info.address AS info_address,
			info. STATUS AS info_status
		FROM
			tb_sign_info info
		INNER JOIN tb_classes cl ON cl.id = info.class_id
		INNER JOIN tb_student stu ON stu.class_id = cl.id
		left JOIN tb_sign sign  ON sign.stu_id = stu.id and sign.info_id = info.id
		<where>
			<if test="infoId != null">
				info.id = #{infoId}
			</if>
		</where>
	</select>

</mapper>