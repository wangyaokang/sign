<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wyk.sign.persistence.TaskMapper">

	<resultMap type="com.wyk.sign.model.Task" id="TaskMap">
		<id property="id" column="id" javaType="long" />
		<result property="upFileUrl" column="up_file_url" />
		<result property="desc" column="desc" />
		<result property="score" column="score" />
		<result property="createTime" column="create_time" />
		<result property="modifyTime" column="modify_time" />
		<association property="student" javaType="com.wyk.sign.model.Student">
			<id property="id" column="stu_id"/>
			<result property="wxId" column="stu_wx_id" />
			<result property="wxName" column="stu_wx_name" />
			<result property="wxAvatarUrl" column="stu_wx_avatar_url" />
			<result property="realName" column="stu_real_name" />
			<result property="userType" column="stu_user_type" />
			<result property="sno" column="stu_sno" />
			<result property="status" column="stu_status" />
		</association>
		<association property="info" javaType="com.wyk.sign.model.TaskInfo">
			<id property="id" column="info_id"/>
			<result property="deadlineTime" column="info_deadline_time" />
			<result property="title" column="info_title" />
			<result property="content" column="info_content" />
			<result property="status" column="info_status" />
		</association>
	</resultMap>

	<sql id="selectSQL">
		select t.*,
			stu.id as stu_id,
			stu.wx_id as stu_wx_id,
			stu.wx_name as stu_wx_name,
			stu.wx_avatar_url as stu_wx_avatar_url,
			stu.real_name as stu_real_name,
			stu.user_type as stu_user_type,
			stu.sno	as stu_sno,
			stu.status as stu_status,
			info.id as info_id,
			info.deadline_time as info_deadline_time,
			info.title as info_title,
			info.content as info_content,
			info.status as info_status
		  from tb_task t
		  	inner join tb_student stu on t.stu_id = stu.id
		  	inner join tb_task_info info on t.info_id = info.id
	</sql>

	<!-- Base Mapper -->
	<select id="get" parameterType="hashmap" resultMap="TaskMap">
		<include refid="selectSQL" />
		<where>
			<if test="id != null">
				t.id = #{id}
			</if>
		</where>
		limit 0,1
	</select>

	<select id="query" resultMap="TaskMap">
		<include refid="selectSQL" />
	</select>

	<select id="queryByMap" parameterType="hashmap" resultMap="TaskMap">
		<include refid="selectSQL" />
		<where>
			<if test="wxName != null">
				stu.wx_name = #{wxName}
			</if>
			<if test="sno != null">
				and stu.sno = #{sno}
			</if>
		</where>
	</select>

	<insert id="insert" parameterType="com.wyk.sign.model.Task"
		useGeneratedKeys="true" keyProperty="id">
		insert into tb_task (
		stu_id,
		info_id,
		up_file_url,
		`desc`,
		score,
		status)
		values
		(#{student.id},
		#{info.id},
		#{upFileUrl},
		#{desc},
		#{score},
		#{status})
	</insert>

	<update id="update" parameterType="com.wyk.sign.model.Task">
		update tb_task set
		stu_id=#{student.id},
		info_id=#{info.id},
		up_file_url=#{upFileUrl},
		`desc`=#{desc},
		score=#{score},
		status=#{status},
		modify_time=#{modifyTime}
		where id = #{id}
	</update>

	<update id="updateBatch" parameterType="List">
		<foreach collection="list" separator=";" item="task">
			update tb_task set
			stu_id=#{task.student.id},
			info_id=#{task.info.id},
			up_file_url=#{task.upFileUrl},
			`desc`=#{task.desc},
			score=#{task.score},
			status=#{task.status},
			modify_time=#{task.modifyTime}
			where id = #{task.id}
		</foreach>
	</update>

	<delete id="delete" parameterType="com.wyk.sign.model.Task">
		delete from tb_task
		<where>
			<if test="id != null">
				id = #{id}
			</if>
		</where>
	</delete>

	<delete id="deleteByMap" parameterType="hashmap">
		delete from tb_task
		<where>
			<if test="infoId != null">
				info_id = #{infoId}
			</if>
		</where>
	</delete>
	<!-- End of Base Mapper -->


</mapper>